name: CI

on:
  push:
    branches:
      - main
  pull_request:

permissions:
  actions: read
  contents: read

jobs:
  main:
    runs-on: ubuntu-latest

    # Make your Applitools key available to all steps
    env:
      APPLITOOLS_API_KEY: ${{ secrets.APPLITOOLS_API_KEY }}

    steps:
      # 1. Check out the code
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          filter: tree:0

      # 2. (Optional) Start Nx Cloud for distributed caching
      - name: Start Nx Cloud
        run: npx nx-cloud start-ci-run --distribute-on="3 linux-medium-js" --stop-agents-after="e2e-ci"

      # 3. Set up Node and cache dependencies
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      # 4. Install production & dev dependencies
      - name: Install dependencies
        run: npm ci --legacy-peer-deps

      # 5. Install Playwright browsers
      - name: Install Playwright browsers
        run: npx playwright install --with-deps

      # 6. Record SHAs for Nx Cloud
      - name: Record SHAs for Nx Cloud
        uses: nrwl/nx-set-shas@v4

      # 7. Run lint, unit tests, and build (skip e2e here)
      - name: Lint, Test & Build
        run: npx nx affected -t lint test build

      # 8. Run your E2E suite in headed mode under Xvfb
      - name: Run E2E (Playwright headed with Xvfb)
        run: |
          # Start your app in the background
          npm run start &

          # Give it a moment to boot
          npx wait-on http://localhost:4200

          # Wrap Playwright in Xvfb so headed mode can open a display
          xvfb-run --auto-servernum --server-args="-screen 0 1280x720x24" \
            npx playwright test --config=./e2e/playwright.config.ts --reporter=github

      # 9. (Optional) Stop Nx Cloud run
      - name: Stop Nx Cloud
        if: always()
        run: npx nx-cloud stop-ci-run
